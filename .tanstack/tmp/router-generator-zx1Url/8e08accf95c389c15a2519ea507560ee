/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as StoryRouteImport } from './routes/story'
import { Route as NewRouteImport } from './routes/new'
import { Route as LoadRouteImport } from './routes/load'
import { Route as HintsRouteImport } from './routes/hints'
import { Route as GameRouteImport } from './routes/game'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'

const StoryRoute = StoryRouteImport.update({
  id: '/story',
  path: '/story',
  getParentRoute: () => rootRouteImport,
} as any)
const NewRoute = NewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => rootRouteImport,
} as any)
const LoadRoute = LoadRouteImport.update({
  id: '/load',
  path: '/load',
  getParentRoute: () => rootRouteImport,
} as any)
const HintsRoute = HintsRouteImport.update({
  id: '/hints',
  path: '/hints',
  getParentRoute: () => rootRouteImport,
} as any)
const GameRoute = GameRouteImport.update({
  id: '/game',
  path: '/game',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/game': typeof GameRoute
  '/hints': typeof HintsRoute
  '/load': typeof LoadRoute
  '/new': typeof NewRoute
  '/story': typeof StoryRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/game': typeof GameRoute
  '/hints': typeof HintsRoute
  '/load': typeof LoadRoute
  '/new': typeof NewRoute
  '/story': typeof StoryRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/game': typeof GameRoute
  '/hints': typeof HintsRoute
  '/load': typeof LoadRoute
  '/new': typeof NewRoute
  '/story': typeof StoryRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/game' | '/hints' | '/load' | '/new' | '/story'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/game' | '/hints' | '/load' | '/new' | '/story'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/game'
    | '/hints'
    | '/load'
    | '/new'
    | '/story'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  GameRoute: typeof GameRoute
  HintsRoute: typeof HintsRoute
  LoadRoute: typeof LoadRoute
  NewRoute: typeof NewRoute
  StoryRoute: typeof StoryRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/story': {
      id: '/story'
      path: '/story'
      fullPath: '/story'
      preLoaderRoute: typeof StoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/new': {
      id: '/new'
      path: '/new'
      fullPath: '/new'
      preLoaderRoute: typeof NewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/load': {
      id: '/load'
      path: '/load'
      fullPath: '/load'
      preLoaderRoute: typeof LoadRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hints': {
      id: '/hints'
      path: '/hints'
      fullPath: '/hints'
      preLoaderRoute: typeof HintsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game': {
      id: '/game'
      path: '/game'
      fullPath: '/game'
      preLoaderRoute: typeof GameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  GameRoute: GameRoute,
  HintsRoute: HintsRoute,
  LoadRoute: LoadRoute,
  NewRoute: NewRoute,
  StoryRoute: StoryRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
